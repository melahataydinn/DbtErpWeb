@model Deneme_proje.Models.DenizlerEntities.RaportViewModel
@{
    ViewData["Title"] = "Araç Masrafı Raporu";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Gelir ve gider hesaplamaları
    double gelir = (double)Model.Denizler1Data.Sum(x => x.NakliyeCiroBedeli);
    double gider = (double)Model.Denizler2Data.Sum(x => x.Tutar) + (double)Model.Denizler3Data.Sum(x => x.Tutar);
    double sonuc = gelir - gider;

}


<link href="~/content/assets/css/bahcepinar.css" rel="stylesheet" />
<link href="~/content/assets/css/site.css" rel="stylesheet" />
<style>
    table.dataTable tbody th, table.dataTable tbody td {
        padding: 5px 21px !important;
    }

    @@media only screen and (max-width: 576px) {
        .form-inline .btn {
            margin-top: 0;
        }
    }

    html, body {
        height: 100%;
        margin: 0;
        overflow: auto;
    }


    .table {
        margin-bottom: 0rem;
    }

    .content-inner {
        padding: 0px !important;
    }

    /* Genel düzenleme */
    .column-width {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: wrap;
        padding: 5px;
        max-width: 100%;
        width: 100%;
    }

    .table-responsive th, .table-responsive td {
        padding: 2px 10px;
    }



    .tablo-th-baslik th {
        color: black;
        font-weight: bold;
    }

    .table-striped > tbody > tr:nth-of-type(even) > th {
        font-weight: bold;
        color: black !important;
    }

    form {
        box-shadow: 0 8px 8px rgba(0, 0, 0, 0.3);
    }

    .table-container {
        width: 100%;
    }

    .table-responsive table {
        font-size: 9px;
        table-layout: fixed;
    }

    .table-container .table .masraf-adı-cell {
        max-width: 100px;
        font-size: 0.75em;
    }

    .table-container td, .table-container th {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        padding: 5px;
        max-width: 100px;
    }

    .container-fluid {
        padding: 0 15px;
    }

    .row {
        margin: 0;
    }

    .col-md-3, .col-md-6, .col-md-12 {
        padding: 0 5px;
    }

    .form-group {
        margin-bottom: 10px;
    }

    .btn {
        font-size: 0.75em;
        padding: 5px 8px;
    }

    .card-header, .card-body {
        padding: 10px;
    }

    .header-title h4 {
        font-size: 1.2em;
    }

    .filtre {
        height: 20px;
        font-size: 10px;
    }
</style>

<div class="main-content mt-5">
    <div class="px-lg-5 px-3">
        <div class="row no-print">
            <div class="col-sm-12 p-0 no-print">
                <div class="main-header">

                    <ol class="breadcrumb breadcrumb-title breadcrumb-arrow">
                        <li class="breadcrumb-item">
                            <a href="/Home/Index"><i class="icofont icofont-home"></i></a>
                        </li>

                    </ol>
                </div>
            </div>
        </div>

        <div class="row mb-lg-5 mb-1">
            <div class="card">
                <div class="card-header d-flex justify-content-between">
                    <!-- Header içeriği buraya gelecek -->
                </div>
                <div class="row d-flex justify-content-center">
                    <div class="col-md-4 d-flex flex-column justify-content-center">
                        <form id="veri" method="get" class="mb-4 px-5 pt-5">
                            <div class="header-title">
                                <h4 class="card-title px-4">Araç Masrafı Raporu</h4>
                            </div>
                            <div class="row d-flex flex-column mb-3">
                                <div class="form-group col">
                                    <label for="baslamaTarihi">Başlama Tarihi:</label>
                                    <input type="date" id="baslamaTarihi" name="baslamaTarihi" class="form-control form-control-sm" required value="@Model.BaslamaTarihi.ToString("yyyy-MM-dd")" />
                                </div>
                                <div class="form-group col">
                                    <label for="bitisTarihi">Bitiş Tarihi:</label>
                                    <input type="date" id="bitisTarihi" name="bitisTarihi" class="form-control form-control-sm" required value="@Model.BitisTarihi.ToString("yyyy-MM-dd")" />
                                </div>
                                <!-- Proje Kodu Input ve Datalist -->
                                <div class="form-group col">
                                    <label for="projeKoduInput">Proje Kodu:</label>
                                    <input type="text" id="projeKoduInput" name="projeKodu" class="form-control form-control-sm" list="projeKoduList" placeholder="Proje Kodu / Adı Ara..." />
                                    <datalist id="projeKoduList">
                                        @foreach (var item in Model.ProjeKodlari)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </datalist>
                                </div>

                                <!-- Sorumlu Kodu Input ve Datalist -->
                                <div class="form-group col">
                                    <label for="srmKodu">Sorumlu Kodu:</label>
                                    <input type="text" id="srmKodu" name="srmKodu" class="form-control form-control-sm" list="srmKoduList" placeholder="Sorumlu Kodu Ara..." />
                                    <datalist id="srmKoduList">
                                        @foreach (var item in Model.SorumluKodlari)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </datalist>
                                </div>



                                <div class="form-group col-md-12 text-right mt-3">
                                    <button type="submit" class="btn btn-primary btn-sm">Verileri Getir</button>
                                    <button type="button" id="resetButton" class="btn btn-secondary btn-sm ml-2">Seçimleri Sıfırla</button>
                                    <div class="text-right no-print">
                                        <button class="btn btn-success" onclick="window.print()">Yazdır</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-8">
                        @if (Model.Denizler1Data != null || Model.Denizler2Data != null || Model.Denizler3Data != null || Model.Denizler4Data != null)
                        {

                            <div class="table-container d-flex justify-content-center">

                                <div class="table-responsive me-3">

                                    @if (Model.Denizler1Data != null && Model.Denizler1Data.Any())
                                    {
                                        <h5>Detay Rapor</h5>
                                        <table id="denizler1tablo" class="table table-bordered table-striped tablo-th-baslik">
                                            <tbody>
                                                @foreach (var item in Model.Denizler1Data)
                                                {
                                                    <tr>
                                                        <th>Gidilen Sefer Sayısı</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.GidilenSeferSayısı">@item.GidilenSeferSayısı.ToString("N2", new System.Globalization.CultureInfo("tr-TR"))</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Taşınan Tonaj</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.TaşınanTonaj">@item.TaşınanTonaj.ToString("N2", new System.Globalization.CultureInfo("tr-TR"))</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Kullanılan Yakıt Litre</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.KullanılanYakıtLitre">@item.KullanılanYakıtLitre.ToString("N2", new System.Globalization.CultureInfo("tr-TR"))</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Depo Mazot Gideri</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.KullanılanYakıtTutarı">@string.Format("{0:N2}₺", item.KullanılanYakıtTutarı)</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Depo Yedek Parça + Mazot Gider Toplamı</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.StoktaKullanılan">@string.Format("{0:N2}₺", item.StoktaKullanılan)</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Sanayi Yedek Parça Gideri</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.SanayideYapilan">@string.Format("{0:N2}₺", item.SanayideYapilan)</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Depo Yedek Parça Gideri</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.MazotHariçStoktaKullanılan">@string.Format("{0:N2}₺", item.MazotHariçStoktaKullanılan)</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Tüm Giderler Toplamı</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.TümGiderler">@string.Format("{0:N2}₺", item.TümGiderler)</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Nakliye Ciro Bedeli</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.NakliyeCiroBedeli">@string.Format("{0:N2}₺", item.NakliyeCiroBedeli)</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Bir Saat Km'de Yakıt Litre Tutarı</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.BirSaatKmYapılanYakıtLitresiTutar">@string.Format("{0:N2}₺", item.BirSaatKmYapılanYakıtLitresiTutar)</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Çalışma Saati Yapılan KM</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.ÇalışmaSaatiYapılanKM">@item.ÇalışmaSaatiYapılanKM.ToString("N2", new System.Globalization.CultureInfo("tr-TR"))</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Km'de yakılan Yakıt Oranı</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.BirSaatKMYapılanYakıtLitresi">@item.BirSaatKMYapılanYakıtLitresi.ToString("N2", new System.Globalization.CultureInfo("tr-TR"))</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Bir Saatte Yakılan Yakıt</th>
                                                        <td class="tooltip-cell" style="text-align: right" title="@item.BirSaatKMYakılanYakıtLitreOran">@item.BirSaatKMYakılanYakıtLitreOran.ToString("N2", new System.Globalization.CultureInfo("tr-TR"))</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    }
                                </div>

                                @if (Model.SorumlulukUserData != null && Model.SorumlulukUserData.Any())
                                {
                                    <div class="table-responsive">
                                        <h5>Araç Bilgileri</h5>
                                        <table id="denizler_srm_tablo" class="table table-bordered table-striped tablo-th-baslik">
                                            <tbody>
                                                @foreach (var item in Model.SorumlulukUserData)
                                                {
                                                    <tr>
                                                        <th>Firma Adı</th>
                                                        <td class="tooltip-cell" title="@item.Firma_Adi">@item.Firma_Adi</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Araç Marka</th>
                                                        <td class="tooltip-cell" title="@item.Arac_Marka">@item.Arac_Marka</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Araç Modeli</th>
                                                        <td class="tooltip-cell" title="@item.Arac_Modeli">@item.Arac_Modeli</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Araç Model Yılı</th>
                                                        <td class="tooltip-cell" title="@item.Arac_Model_Yili">@item.Arac_Model_Yili</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Ruhsat Seri No</th>
                                                        <td class="tooltip-cell" title="@item.Ruhsat_Seri_No">@item.Ruhsat_Seri_No</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Şase No</th>
                                                        <td class="tooltip-cell" title="@item.Sase_No">@item.Sase_No</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Muayene Bitiş Tarihi</th>
                                                        <td class="tooltip-cell" title="@item.Muayene_Bitis_Tarihi">@item.Muayene_Bitis_Tarihi</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Kullanıcı Adı</th>
                                                        <td class="tooltip-cell" title="@item.Kullanici_Adi">@item.Kullanici_Adi</td>
                                                    </tr>
                                                    <tr>
                                                        <th>Kullanıcı Adı (İkinci)</th>
                                                        <td class="tooltip-cell" title="@item.Kullanici_Adi__2__">@item.Kullanici_Adi__2__</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                        <div class="col">
                                            <div class="table-container">
                                                <div class="table-responsive" style="margin: 0; padding: 0;">
                                                    <h5>Kar-Zarar</h5>
                                                    <table id="denizlertablo" class="table table-bordered table-striped table-sm">
                                                        <tbody>
                                                            <tr>
                                                                <td><strong>Gelir Toplamı:</strong></td>
                                                                <td class="tooltip-cell" style="text-align: right" title="@gelir">@string.Format("{0:N2}₺", gelir)</td>
                                                            </tr>
                                                            <tr>
                                                                <td><strong>Gider Toplamı:</strong></td>
                                                                <td class="tooltip-cell" style="text-align: right" title="@gider">@string.Format("{0:N2}₺", gider)</td>
                                                            </tr>

                                                            <tr>
                                                                <td><strong>Sonuç:</strong></td>
                                                                <td class="tooltip-cell" style="text-align: right" title="@sonuc">@string.Format("{0:N2}₺", sonuc)</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                }

                            </div>

                        }
                    </div>
                </div>
                @if (Model.Denizler1Data != null || Model.Denizler2Data != null || Model.Denizler3Data != null || Model.Denizler4Data != null)
                {
                    <div class="card-body px-5">
                        <!-- Denizler 2 Data -->
                        <div class="row">
                            <div class="col-md-6 mb-4" style=" page-break-before: always;">
                                <h5 class="pb-3">Sanayide Yapılan</h5>
                                <div class="table-responsive">
                                    <table id="denizler2tablo" class="table table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th>Tarih</th>
                                                <th>Açıklama</th>
                                                <th>Masraf Adı</th>
                                                <th>Miktar</th>
                                                <th>Tutar</th>
                                            </tr>
                                            <tr>
                                                <th><input type="text" class="form-control form-control-sm filtre" placeholder="Tarih Ara" onkeyup="filterTable(0, 'denizler2tablo')"></th>
                                                <th><input type="text" class="form-control form-control-sm filtre" placeholder="Açıklama Ara" onkeyup="filterTable(1, 'denizler2tablo')"></th>
                                                <th><input type="text" class="form-control form-control-sm filtre" placeholder="Masraf Adı Ara" onkeyup="filterTable(2, 'denizler2tablo')"></th>
                                                <th><input type="text" class="form-control form-control-sm filtre" placeholder="Miktar Ara" onkeyup="filterTable(3, 'denizler2tablo')"></th>
                                                <th><input type="text" class="form-control form-control-sm filtre" placeholder="Tutar Ara" onkeyup="filterTable(4, 'denizler2tablo')"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.Denizler2Data)
                                            {
                                                <tr>
                                                    <td>@item.Tarih.ToShortDateString()</td>
                                                    <td class="column-width tooltip-cell" title="@item.Açıklama">@item.Açıklama</td>
                                                    <td class="column-width tooltip-cell" title="@item.MasrafAdı">@item.MasrafAdı</td>
                                                    <td class="column-width tooltip-cell" style="text-align: right" title="@item.Miktar">@item.Miktar.ToString("N2", new System.Globalization.CultureInfo("tr-TR"))</td>
                                                    <td class="column-width tooltip-cell" style="text-align: right" title="@item.Tutar">@string.Format("{0:N2}₺", item.Tutar)</td>
                                                </tr>
                                            }
                                            <!-- Toplam Satırı -->
                                            <tr>
                                                <td colspan="3" style="text-align: right;"><strong>Toplam:</strong></td>
                                                <td style="text-align: right;">
                                                    <strong>
                                                        @Model.Denizler2Data.Sum(x => x.Miktar).ToString("N2", new System.Globalization.CultureInfo("tr-TR"))
                                                    </strong>
                                                </td>
                                                <td style="text-align: right;">
                                                    <strong>
                                                        @string.Format("{0:N2}₺", Model.Denizler2Data.Sum(x => x.Tutar))
                                                    </strong>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <!-- Denizler 3 Data -->
                            <div class="col-md-6 mb-4" style=" page-break-before: always;">
                                <h5 class="pb-3">Stokta Kullanılan</h5>
                                <div class="table-responsive">
                                    <table id="denizler3tablo" class="table table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th>Tarih</th>
                                                <th>Açıklama</th>
                                                <th>Stok Adı</th>
                                                <th>Miktar</th>
                                                <th>Tutar</th>
                                            </tr>
                                            <tr>
                                                <th><input type="text" class="form-control form-control-sm filtre" placeholder="Tarih Ara" onkeyup="filterTable(0, 'denizler3tablo')"></th>
                                                <th><input type="text" class="form-control form-control-sm filtre" placeholder="Açıklama Ara" onkeyup="filterTable(1, 'denizler3tablo')"></th>
                                                <th><input type="text" class="form-control form-control-sm filtre" placeholder="Stok Adı Ara" onkeyup="filterTable(2, 'denizler3tablo')"></th>
                                                <th><input type="text" class="form-control form-control-sm filtre" placeholder="Miktar Ara" onkeyup="filterTable(3, 'denizler3tablo')"></th>
                                                <th><input type="text" class="form-control form-control-sm filtre" placeholder="Tutar Ara" onkeyup="filterTable(4, 'denizler3tablo')"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.Denizler3Data)
                                            {
                                                <tr>
                                                    <td>@item.Tarih.ToShortDateString()</td>
                                                    <td class="column-width tooltip-cell" title="@item.Açıklama">@item.Açıklama</td>
                                                    <td class="column-width stok-adi-column tooltip-cell" title="@item.StokAdı">@item.StokAdı</td>
                                                    <td class="column-width tooltip-cell" style="text-align: right" title="@item.Miktar">@item.Miktar.ToString("N2", new System.Globalization.CultureInfo("tr-TR"))</td>
                                                    <td class="column-width tooltip-cell" style="text-align: right" title="@item.Tutar">@string.Format("{0:N2}₺", item.Tutar)</td>
                                                </tr>
                                            }
                                            <tr>
                                                <td colspan="3" style="text-align: right;"><strong>Toplam:</strong></td>
                                                <td style="text-align: right;">
                                                    <strong>
                                                        @Model.Denizler3Data.Sum(x => x.Miktar).ToString("N2", new System.Globalization.CultureInfo("tr-TR"))
                                                    </strong>
                                                </td>
                                                <td style="text-align: right;">
                                                    <strong>
                                                        @string.Format("{0:N2}₺", Model.Denizler3Data.Sum(x => x.Tutar))
                                                    </strong>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning" role="alert">
                        Veri bulunamadı. Lütfen tarih aralığını girip tekrar deneyin.
                    </div>
                }

            </div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.flash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.print.min.js"></script>

    <script>
        $(document).ready(function () {
            // Her iki tablo için DataTable özelliklerini uygula
            $('#denizler1tablo, #denizler2tablo').DataTable({
                responsive: true,
                dom: '<"row"<"col-sm-12"B>>' +
                    '<"row"<"col-sm-6"l><"col-sm-6"f>>' +
                    't' +
                    '<"row"<"col-sm-6"i><"col-sm-6"p>>',
                language: {
                    url: "/Content/DataTables/turkish.json" // Türkçe dil dosyası
                },
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'  // Export butonları
                ],
                paging: true,  // Sayfalama
                searching: true,  // Arama
                ordering: true  // Sıralama
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            new DataTable('#example');
            new DataTable('#second_table');
        });
    </script>
    <script>
        function filterTable(columnIndex, tableId) {
            var input, filter, table, tr, td, i, txtValue;
            input = document.querySelectorAll("#" + tableId + " thead tr:nth-child(2) th input")[columnIndex];
            filter = input.value.toUpperCase();
            table = document.getElementById(tableId);
            tr = table.getElementsByTagName("tr");

            // Tablo satırlarını filtreleme işlemi
            for (i = 2; i < tr.length; i++) { // İlk iki satır başlık ve arama kutuları
                td = tr[i].getElementsByTagName("td")[columnIndex];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = ""; // Eşleşen satırları gösteriyoruz
                    } else {
                        tr[i].style.display = "none"; // Eşleşmeyen satırları gizliyoruz
                    }
                }
            }
        }
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // URL parametrelerinden seçimleri geri yükle
            const urlParams = new URLSearchParams(window.location.search);
            const projeKodu = urlParams.get('projeKodu');
            const srmKodu = urlParams.get('srmKodu');

            // Seçimleri URL parametrelerinden al ve formda ayarla
            if (projeKodu) {
                document.getElementById('projeKodu').value = projeKodu;
            }

            if (srmKodu) {
                document.getElementById('srmKodu').value = srmKodu;
            }

            // `localStorage`'dan seçimleri geri yükle
            restoreSelections();

            // Seçimleri sıfırlama butonuna işlev ekle
            document.getElementById('resetButton').addEventListener('click', function () {
                document.querySelector('#veri').reset();
                const url = new URL(window.location.href);
                url.searchParams.delete('projeKodu');
                url.searchParams.delete('srmKodu');
                window.history.replaceState({}, '', url);
                localStorage.removeItem('projeKodu');
                localStorage.removeItem('srmKodu');
            });



            function restoreSelections() {
                // LocalStorage'daki seçimleri geri yükle
                const savedProjeKodu = localStorage.getItem('projeKodu');
                const savedSrmKodu = localStorage.getItem('srmKodu');

                if (savedProjeKodu) {
                    document.getElementById('projeKodu').value = savedProjeKodu;
                }

                if (savedSrmKodu) {
                    document.getElementById('srmKodu').value = savedSrmKodu;
                }
            }

    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const srmKoduInput = document.getElementById("srmKodu");

            // Input elemanına `change` olayı ekleniyor
            srmKoduInput.addEventListener("change", function () {
                console.log("Seçilen Sorumlu Kodu:", srmKoduInput.value);
            });
        });
        document.addEventListener("DOMContentLoaded", function () {
            // URL parametrelerinden seçimleri geri yükle
            const urlParams = new URLSearchParams(window.location.search);
            const projeKodu = urlParams.get('projeKodu');
            const srmKodu = urlParams.get('srmKodu');

            // Seçimleri URL parametrelerinden al ve formda ayarla
            if (projeKodu) {
                document.getElementById('projeKodu').value = projeKodu;
            }

            if (srmKodu) {
                document.getElementById('srmKodu').value = srmKodu;
            }

            // `localStorage`'dan seçimleri geri yükle
            restoreSelections();

            // Seçimleri sıfırlama butonuna işlev ekle
            document.getElementById('resetButton').addEventListener('click', function () {
                document.querySelector('#veri').reset();
                const url = new URL(window.location.href);
                url.searchParams.delete('projeKodu');
                url.searchParams.delete('srmKodu');
                window.history.replaceState({}, '', url);
                localStorage.removeItem('projeKodu');
                localStorage.removeItem('srmKodu');
            });

            // Yazdırma butonuna işlev ekle
            document.getElementById('printButton').addEventListener('click', function (e) {
                e.preventDefault(); // Sayfanın yenilenmesini engelle
                saveSelections(); // Seçimleri `localStorage`'a kaydet
                printPage(); // Yazdırma işlemini başlat
            });
        });

        function saveSelections() {
            const projeKodu = document.getElementById('projeKodu').value;
            const srmKodu = document.getElementById('srmKodu').value;

            // Seçimleri localStorage'a kaydet
            localStorage.setItem('projeKodu', projeKodu);
            localStorage.setItem('srmKodu', srmKodu);
        }

        function restoreSelections() {
            // LocalStorage'daki seçimleri geri yükle
            const savedProjeKodu = localStorage.getItem('projeKodu');
            const savedSrmKodu = localStorage.getItem('srmKodu');

            if (savedProjeKodu) {
                document.getElementById('projeKodu').value = savedProjeKodu;
            }

            if (savedSrmKodu) {
                document.getElementById('srmKodu').value = savedSrmKodu;
            }
        }

            function printPage() {
                // Get the selected value from input
                var srmKoduInput = document.getElementById('srmKodu');
                var srmKoduList = document.getElementById('srmKoduList');
                var selectedValue = srmKoduInput.value;

                // Find matching option text from datalist
                var selectedOption = Array.from(srmKoduList.options).find(option => option.value === selectedValue);
                var selectedText = selectedOption ? selectedOption.text : selectedValue;

                var printContents = '';

                // Add a normal text line with selected responsibility code at the top
                printContents += '<p style="text-align: center; font-weight: bold;">SEÇİLMİŞ OLAN SORUMLULUK KODU: ' + selectedText + '</p>';

                // Get other form values
                var baslamaTarihi = document.getElementById('baslamaTarihi').value;
                var bitisTarihi = document.getElementById('bitisTarihi').value;
                var projeKodu = document.getElementById('projeKodu').selectedOptions[0].text;

                // Add report details
                printContents += '<p><strong>Rapor Başlangıç- Bitiş Tarihi:</strong> ' + baslamaTarihi + " / " + bitisTarihi + '</p>';
                printContents += '<p><strong>Proje Kodu:</strong> ' + projeKodu + '</p>';

                // Add table styles
                printContents += `<style>
            table {
                width: 100%;
                font-size: 8pt;
                line-height: 1.2;
                table-layout: fixed;
            }
            td, th {
                padding: 2px;
                line-height: 1.2;
            }
        </style>`;

                // Add tables if they exist
                var denizlerTablo = document.getElementById('denizlertablo');
                if (denizlerTablo) {
                    printContents += '<h5 style="color: red">Gelir Gider Tabloları</h5>' + denizlerTablo.outerHTML;
                }

                var denizlerSrmTablo = document.getElementById('denizler_srm_tablo');
                if (denizlerSrmTablo) {
                    printContents += '<h5 style="color: red">Sorumluluk Merkezi Verileri</h5>' + denizlerSrmTablo.outerHTML;
                }

                var denizler1Tablolar = document.querySelectorAll('#denizler1tablo');
                denizler1Tablolar.forEach(function (tablo) {
                    printContents += '<h5 style="color: red">Araç Özeti</h5>' + tablo.outerHTML;
                });

                var denizler2Tablo = document.getElementById('denizler2tablo');
                if (denizler2Tablo) {
                    printContents += '<h3>Sanayide Yapılan</h3>' + denizler2Tablo.outerHTML;
                }

                var denizler3Tablo = document.getElementById('denizler3tablo');
                if (denizler3Tablo) {
                    printContents += '<h3>Stokta Kullanılan</h3>' + denizler3Tablo.outerHTML;
                }

                // Print the content
                var originalContents = document.body.innerHTML;
                document.body.innerHTML = printContents;
                window.print();
                document.body.innerHTML = originalContents;

                // Restore selections if needed
                if (typeof restoreSelections === 'function') {
                    restoreSelections();
                }
            }



    </script>

    // <script>
    //     document.addEventListener("DOMContentLoaded", function () {
    //         var srmKoduSelect = document.getElementById('srmKodu');
    //         var printSrmKodu = document.getElementById('srmKodu');

    //         // Sayfa yüklendiğinde başlığı güncelle
    //         updateSrmKodu();

    //         // Sorumluluk kodu değiştiğinde başlığı güncelle
    //         srmKoduSelect.addEventListener('change', updateSrmKodu);

    //         function updateSrmKodu() {
    //             var selectedOption = srmKoduSelect.options[srmKoduSelect.selectedIndex];
    //             if (selectedOption && selectedOption.value) {
    //                 // Eğer sorumluluk kodu seçilmişse başlığı günceller
    //                 if (selectedOption.value !== "") {
    //                     printSrmKodu.innerText = selectedOption.text + ' MASRAF RAPORU';
    //                 } else {
    //                     printSrmKodu.innerText = ''; // "Seçiniz" veya boş olduğunda başlık yazdırılmaz
    //                 }
    //             } else {
    //                 printSrmKodu.innerText = 'Araç Masraf Raporu'; // Default başlık
    //             }
    //         }
    //     });

    // </script>

    <script>
        $(document).ready(function () {
            // Proje kodu ve sorumlu kodu select'lerine Select2 uygulama
            $('#projeKodu').select2({
                placeholder: "Proje kodu ara...",
                allowClear: true
            });

            $('#srmKodu').select2({
                placeholder: "Sorumlu kodu ara...",
                allowClear: true
            });
        });
    </script>

    <script>
        // Filtreleme fonksiyonu
        document.getElementById('srmKoduFilter').addEventListener('keyup', function () {
            var filterValue = this.value.toLowerCase();
            var select = document.getElementById('srmKodu');
            var options = select.getElementsByTagName('option');

            // Her bir option üzerinde arama yap
            for (var i = 1; i < options.length; i++) { // İlk option "Seçiniz" olduğu için 1'den başlıyoruz
                var optionText = options[i].textContent.toLowerCase();
                if (optionText.includes(filterValue)) {
                    options[i].style.display = ''; // Göster
                } else {
                    options[i].style.display = 'none'; // Gizle
                }
            }
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('veri');
            const baslamaTarihi = document.getElementById('baslamaTarihi');
            const bitisTarihi = document.getElementById('bitisTarihi');
            const projeKoduInput = document.getElementById('projeKoduInput');
            const srmKodu = document.getElementById('srmKodu');
            const resetButton = document.getElementById('resetButton');

            // Only restore values if there are URL parameters
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.toString()) {
                restoreFormValues();
            }

            form.addEventListener('submit', function () {
                saveFormValues();
            });

            [baslamaTarihi, bitisTarihi, projeKoduInput, srmKodu].forEach(element => {
                if (element) {
                    element.addEventListener('change', saveFormValues);
                }
            });

            resetButton.addEventListener('click', function () {
                localStorage.removeItem('formValues');
                form.reset();
            });

            function saveFormValues() {
                const formValues = {
                    baslamaTarihi: baslamaTarihi.value,
                    bitisTarihi: bitisTarihi.value,
                    projeKodu: projeKoduInput.value,
                    srmKodu: srmKodu.value
                };
                localStorage.setItem('formValues', JSON.stringify(formValues));
            }

            function restoreFormValues() {
                const savedValues = localStorage.getItem('formValues');
                if (savedValues) {
                    const formValues = JSON.parse(savedValues);

                    if (formValues.baslamaTarihi) baslamaTarihi.value = formValues.baslamaTarihi;
                    if (formValues.bitisTarihi) bitisTarihi.value = formValues.bitisTarihi;
                    if (formValues.projeKodu) projeKoduInput.value = formValues.projeKodu;
                    if (formValues.srmKodu) srmKodu.value = formValues.srmKodu;
                }
            }
        });

                function filterTable(columnIndex, tableId) {
            var input, filter, table, tr, td, i, txtValue;
            input = document.querySelectorAll("#" + tableId + " thead tr:nth-child(2) th input")[columnIndex];
            filter = input.value.toUpperCase();
            table = document.getElementById(tableId);
            tr = table.getElementsByTagName("tr");

            // Keep track of visible rows for calculation
            var visibleRows = [];

            // Tablo satırlarını filtreleme işlemi
            for (i = 2; i < tr.length - 1; i++) { // Skip header rows and total row
                td = tr[i].getElementsByTagName("td")[columnIndex];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = ""; // Eşleşen satırları gösteriyoruz
                        visibleRows.push(tr[i]);
                    } else {
                        tr[i].style.display = "none"; // Eşleşmeyen satırları gizliyoruz
                    }
                }
            }

            // Update totals based on visible rows
            updateSubtotals(tableId, visibleRows);
        }

        function updateSubtotals(tableId, visibleRows) {
            var table = document.getElementById(tableId);
            var totalRow = table.rows[table.rows.length - 1]; // Last row is total row

            // For denizler2tablo and denizler3tablo
            if (tableId === 'denizler2tablo' || tableId === 'denizler3tablo') {
                // Reset totals
                var totalMiktar = 0;
                var totalTutar = 0;

                // Calculate totals from visible rows
                for (var i = 0; i < visibleRows.length; i++) {
                    var row = visibleRows[i];
                    var miktarCell = row.cells[3]; // Miktar column
                    var tutarCell = row.cells[4];  // Tutar column

                    // Extract numeric values (remove currency symbol and formatting)
                    var miktarValue = parseFloat(miktarCell.textContent.replace(/\./g, '').replace(',', '.'));
                    var tutarValue = parseFloat(tutarCell.textContent.replace('₺', '').replace(/\./g, '').replace(',', '.'));

                    if (!isNaN(miktarValue)) totalMiktar += miktarValue;
                    if (!isNaN(tutarValue)) totalTutar += tutarValue;
                }

                // Update total cells with new values
                var totalMiktarCell = totalRow.cells[totalRow.cells.length - 2]; // Second last cell
                var totalTutarCell = totalRow.cells[totalRow.cells.length - 1]; // Last cell

                // Format numbers with Turkish formatting
                totalMiktarCell.innerHTML = '<strong>' + totalMiktar.toLocaleString('tr-TR', {minimumFractionDigits: 2, maximumFractionDigits: 2}) + '</strong>';
                totalTutarCell.innerHTML = '<strong>' + totalTutar.toLocaleString('tr-TR', {minimumFractionDigits: 2, maximumFractionDigits: 2}) + '₺</strong>';
            }

            // If no visible rows, show "0" in totals
            if (visibleRows.length === 0) {
                if (tableId === 'denizler2tablo' || tableId === 'denizler3tablo') {
                    var totalMiktarCell = totalRow.cells[totalRow.cells.length - 2];
                    var totalTutarCell = totalRow.cells[totalRow.cells.length - 1];

                    totalMiktarCell.innerHTML = '<strong>0,00</strong>';
                    totalTutarCell.innerHTML = '<strong>0,00₺</strong>';
                }
            }
        }

        // Initialize the tables with proper event handlers
        document.addEventListener('DOMContentLoaded', function() {
            // Add event listeners to all filter inputs
            var tables = ['denizler2tablo', 'denizler3tablo'];

            tables.forEach(function(tableId) {
                var table = document.getElementById(tableId);
                if (table) {
                    var filterInputs = table.querySelectorAll('thead tr:nth-child(2) th input');
                    filterInputs.forEach(function(input, index) {
                        input.addEventListener('keyup', function() {
                            filterTable(index, tableId);
                        });
                    });
                }
            });
        });
    </script>

